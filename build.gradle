apply plugin: 'java'
apply plugin: 'idea'

//根目录的build.gradle
allprojects {
    //这部分描述对所有项目（父项目和子项目）都生效，类似于全局的配置
    apply plugin: 'idea'
    group = 'com.evan'
    version = '1.0'
}
// 所有子项目的通用配置
subprojects {
    apply plugin: 'java'
    // JVM 版本号要求
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //定义版本号
    ext {
        springVersion = '4.2.6.RELEASE'
        hibernateVersion = '4.3.1.Final'
    }

    repositories {
        jcenter()
    }

    jar <<{
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此
        all*.exclude group: 'commons-httpclient'
        all*.exclude group: 'commons-logging'
        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    dependencies {
        // 通用依赖
        compile(
               // "org.springframework:spring-webmvc:$springVersion"
                /*"org.springframework:spring-context:$springVersion",
                "org.springframework:spring-orm:$springVersion",
                "org.springframework:spring-tx:$springVersion",
                "org.springframework.data:spring-data-jpa:1.5.2.RELEASE",
                "org.hibernate:hibernate-entitymanager:$hibernateVersion",
                "c3p0:c3p0:0.9.1.2",
                "mysql:mysql-connector-java:5.1.26",
                "org.slf4j:slf4j-nop:1.7.6",
                "commons-fileupload:commons-fileupload:1.3.1",
                "com.fasterxml.jackson.core:jackson-databind:2.3.1"*/
        )

        // 依赖maven中不存在的jar
        ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

        compile jarTree

        // 测试依赖
        testCompile(
              //  "org.springframework:spring-test:$springVersion",
              //  "junit:junit:4.11"
        )
    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }

    task createJavaProject << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }

    task createWebProject(dependsOn: 'createJavaProject') << {
        def webAppDir = file("$webAppDirName")
        webAppDir.mkdirs()
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
// 在idea 的 module 中忽略 projects 目录
project("service") {
    ideaModule.enabled = false
}
project("dao") {
    ideaModule.enabled = false
}
project("common") {
    ideaModule.enabled = false
}
project("front") {
    ideaModule.enabled = false
}


gradle.projectsEvaluated {
    gradle.rootProject {
        ideaModule.enabled = false
        idea {
            project {
                // modules = subprojects*.idea.module
                // 如果某个子项目的 ideaModule 设置为 false，则不会在 idea 中生成 module
                def modulesToInclude = subprojects.findAll {it.ideaModule.enabled == true}
                modules = modulesToInclude.idea.module
            }
        }
    }
}